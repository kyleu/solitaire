// Code generated by qtc from "Play.html". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line views/vgame/Play.html:1
package vgame

//line views/vgame/Play.html:1
import (
	"github.com/kyleu/solitaire/app"
	"github.com/kyleu/solitaire/app/controller/cutil"
	"github.com/kyleu/solitaire/app/game"
	"github.com/kyleu/solitaire/app/util"
	"github.com/kyleu/solitaire/views/components"
	"github.com/kyleu/solitaire/views/layout"
)

//line views/vgame/Play.html:10
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line views/vgame/Play.html:10
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line views/vgame/Play.html:10
type Play struct {
	layout.Basic
	Game       *game.Game
	SocketPath string
}

//line views/vgame/Play.html:16
func (p *Play) StreamBody(qw422016 *qt422016.Writer, as *app.State, ps *cutil.PageState) {
//line views/vgame/Play.html:17
	StreamGameplay(qw422016, ps)
//line views/vgame/Play.html:18
	if p.SocketPath == "" {
//line views/vgame/Play.html:19
		if p.Game == nil {
//line views/vgame/Play.html:20
			components.StreamWASMScript(qw422016, "TODO")
//line views/vgame/Play.html:21
		} else {
//line views/vgame/Play.html:22
			components.StreamWASMScript(qw422016, p.Game)
//line views/vgame/Play.html:23
		}
//line views/vgame/Play.html:24
	} else {
//line views/vgame/Play.html:26
		param := `"TODO"`
		if p.Game != nil {
			param = util.ToJSON(p.Game)
		}

//line views/vgame/Play.html:31
		qw422016.N().S(` `)
//line views/vgame/Play.html:31
		qw422016.N().S(` `)
//line views/vgame/Play.html:31
		qw422016.N().S(`<script>window.addEventListener("load", () => websocketInit(0, "`)
//line views/vgame/Play.html:32
		qw422016.E().S(p.SocketPath)
//line views/vgame/Play.html:32
		qw422016.N().S(`",`)
//line views/vgame/Play.html:32
		qw422016.N().S(` `)
//line views/vgame/Play.html:32
		qw422016.N().S(param)
//line views/vgame/Play.html:32
		qw422016.N().S(`));</script>`)
//line views/vgame/Play.html:33
		qw422016.N().S(`
`)
//line views/vgame/Play.html:34
	}
//line views/vgame/Play.html:35
}

//line views/vgame/Play.html:35
func (p *Play) WriteBody(qq422016 qtio422016.Writer, as *app.State, ps *cutil.PageState) {
//line views/vgame/Play.html:35
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/vgame/Play.html:35
	p.StreamBody(qw422016, as, ps)
//line views/vgame/Play.html:35
	qt422016.ReleaseWriter(qw422016)
//line views/vgame/Play.html:35
}

//line views/vgame/Play.html:35
func (p *Play) Body(as *app.State, ps *cutil.PageState) string {
//line views/vgame/Play.html:35
	qb422016 := qt422016.AcquireByteBuffer()
//line views/vgame/Play.html:35
	p.WriteBody(qb422016, as, ps)
//line views/vgame/Play.html:35
	qs422016 := string(qb422016.B)
//line views/vgame/Play.html:35
	qt422016.ReleaseByteBuffer(qb422016)
//line views/vgame/Play.html:35
	return qs422016
//line views/vgame/Play.html:35
}

//line views/vgame/Play.html:37
func StreamGameplay(qw422016 *qt422016.Writer, ps *cutil.PageState) {
//line views/vgame/Play.html:37
	qw422016.N().S(`
  <div class="flex" id="game-wrapper">
    <div class="card game-header">
      <h3>`)
//line views/vgame/Play.html:40
	components.StreamSVGIcon(qw422016, `play`, ps)
//line views/vgame/Play.html:40
	qw422016.N().S(` Play `)
//line views/vgame/Play.html:40
	qw422016.E().S(util.AppName)
//line views/vgame/Play.html:40
	qw422016.N().S(`</h3>
      <em id="load-status">Loading...</em>
    </div>
    <div class="card">
      <h3>`)
//line views/vgame/Play.html:44
	components.StreamSVGIcon(qw422016, `file`, ps)
//line views/vgame/Play.html:44
	qw422016.N().S(` Logs</h3>
      <div class="mt">
      `)
//line views/vgame/Play.html:46
	components.StreamTerminal(qw422016, "log-panel", "")
//line views/vgame/Play.html:46
	qw422016.N().S(`
      </div>
    </div>
  </div>
`)
//line views/vgame/Play.html:50
}

//line views/vgame/Play.html:50
func WriteGameplay(qq422016 qtio422016.Writer, ps *cutil.PageState) {
//line views/vgame/Play.html:50
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/vgame/Play.html:50
	StreamGameplay(qw422016, ps)
//line views/vgame/Play.html:50
	qt422016.ReleaseWriter(qw422016)
//line views/vgame/Play.html:50
}

//line views/vgame/Play.html:50
func Gameplay(ps *cutil.PageState) string {
//line views/vgame/Play.html:50
	qb422016 := qt422016.AcquireByteBuffer()
//line views/vgame/Play.html:50
	WriteGameplay(qb422016, ps)
//line views/vgame/Play.html:50
	qs422016 := string(qb422016.B)
//line views/vgame/Play.html:50
	qt422016.ReleaseByteBuffer(qb422016)
//line views/vgame/Play.html:50
	return qs422016
//line views/vgame/Play.html:50
}
